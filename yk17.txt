17]   
import pandas as pd 
import numpy as np 
Stock_Market={'year':[2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2016,2016,2016,2016,201
 6,2016,2016,2016,2016,2016,2016,2016], 
'Month':[12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1], 
'Interest_Rate':[2.75,2.5,2.5,2.5,2.5,2.5,2.5,2.25,2.25,2.25,2,2,2,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1
 .75], 
'Unemployment':[5.3,5.3,5.3,5.3,5.4,5.6,5.5,5.5,5.5,5.6,5.7,5.9,6,5.9,5.8,6.1,6.2,6.1,6.1,6.1,5.9,6.2,6.2,6.1], 
'Stock_Index':[1464,1394,1357,1293,1256,1254,1234,1195,1159,1167,1130,1075,1047,965,943,958,971,949,884,86
 6,876,822,704,719]} 
df=pd.DataFrame(Stock_Market) 
df.head() 
x=df[['Month','Interest_Rate','Unemployment']] 
y=df[['Stock_Index']] 
from sklearn import linear_model 
from sklearn.model_selection import train_test_split 
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=10) 
from sklearn.linear_model import LinearRegression 
lr=LinearRegression() 
lr.fit(x_train,y_train) 
y_pred=lr.predict(x_test) 
y_pred 
from sklearn.metrics import r2_score 
from sklearn.metrics import mean_squared_error   
score=r2_score(y_test,y_pred) 
mse=mean_squared_error(y_test,y_pred) 
rmse=np.sqrt(mse) 
print("r2 Score:",score) 
mse 
rmse 
y_pred=lr.predict(x) 
y_pred 
import seaborn as sb 
sb.lmplot(x='Interest_Rate',y='Stock_Index',ci=None,data=df)
