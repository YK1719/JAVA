# Function to reverse a number
reverse_number <- function(num) {
  rev <- 0
  while (num > 0) {
    digit <- num %% 10
    rev <- rev * 10 + digit
    num <- num %/% 10   # Integer division
  }
  return(rev)
}

# Function to calculate sum of digits
sum_digits <- function(num) {
  sum <- 0
  while (num > 0) {
    digit <- num %% 10
    sum <- sum + digit
    num <- num %/% 10
  }
  return(sum)
}

# Example number
num <- 12345

# Output
cat("Reversed Number:", reverse_number(num), "\n")
cat("Sum of digits:", sum_digits(num), "\n")





import numpy as np

# Data
x = np.array([0,1,2,3,4,5,6,7,8,9,11,13])
y = np.array([1,3,2,5,7,8,8,9,10,12,16,18])

# Calculate means
x_mean = np.mean(x)
y_mean = np.mean(y)

# Calculate slope (b1) and intercept (b0)
b1 = np.sum((x - x_mean)(y - y_mean)) / np.sum((x - x_mean)*2)
b0 = y_mean - b1*x_mean

print("Estimated coefficients:")
print("b0 (Intercept) =", b0)
print("b1 (Slope) =", b1)

# Optional: regression line values
y_pred = b0 + b1*x
print("Predicted values:", y_pred)
